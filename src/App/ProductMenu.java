/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package App;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Hashan
 */
public class ProductMenu extends javax.swing.JFrame {
private DefaultTableModel tableModel;
ProductMenu productMenu;
    /**
     * Creates new form ProductMenu
     */
    public ProductMenu() {
        initComponents();
         tableModel = (DefaultTableModel) jTable1.getModel();
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        View = new javax.swing.JButton();
        Search = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        JPID = new javax.swing.JTextField();
        ProType = new javax.swing.JTextField();
        JPname = new javax.swing.JTextField();
        JPprice = new javax.swing.JTextField();
        JNoItems = new javax.swing.JTextField();
        Delete = new javax.swing.JButton();
        Exit = new javax.swing.JToggleButton();
        Back = new javax.swing.JToggleButton();
        Clear = new javax.swing.JToggleButton();
        Add = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setText("jLabel3");

        jLabel6.setText("jLabel6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Cooper Black", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 204));
        jLabel1.setText("Manage Product");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 340, 50));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Search");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 60, 30));

        View.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.borderColor"));
        View.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        View.setForeground(null);
        View.setText("View Product");
        View.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewActionPerformed(evt);
            }
        });
        getContentPane().add(View, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, -1, 30));

        Search.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });
        getContentPane().add(Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 131, 140, 30));

        jScrollPane2.setForeground(new java.awt.Color(255, 255, 255));

        jTable2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Type", "Product Name", "Price", "No of Items"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, 780, 190));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Product Type");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 410, -1, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Product ID");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, -1, -1));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Product Name");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 460, 90, 30));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Price");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 440, -1, 30));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("No of Items");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 490, -1, -1));

        JPID.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        getContentPane().add(JPID, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 410, 159, -1));

        ProType.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        getContentPane().add(ProType, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 460, 159, -1));

        JPname.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        getContentPane().add(JPname, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 410, 159, -1));

        JPprice.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        getContentPane().add(JPprice, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 450, 159, -1));

        JNoItems.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        getContentPane().add(JNoItems, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 490, 159, -1));

        Delete.setBackground(new java.awt.Color(255, 204, 204));
        Delete.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Delete.setForeground(null);
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        getContentPane().add(Delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 140, 108, 30));

        Exit.setBackground(new java.awt.Color(255, 204, 204));
        Exit.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Exit.setForeground(null);
        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        getContentPane().add(Exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 610, 108, 30));

        Back.setBackground(new java.awt.Color(255, 204, 204));
        Back.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Back.setForeground(null);
        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        getContentPane().add(Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 610, 90, 30));

        Clear.setBackground(new java.awt.Color(255, 204, 204));
        Clear.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Clear.setForeground(null);
        Clear.setText("Clear");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });
        getContentPane().add(Clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 560, 110, 30));

        Add.setBackground(new java.awt.Color(255, 204, 204));
        Add.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Add.setForeground(null);
        Add.setText("Add Product");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        getContentPane().add(Add, new org.netbeans.lib.awtextra.AbsoluteConstraints(648, 90, 120, 30));

        Update.setBackground(new java.awt.Color(255, 204, 204));
        Update.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Update.setForeground(null);
        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        getContentPane().add(Update, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 560, 110, 30));

        jLabel10.setBackground(new java.awt.Color(255, 255, 204));
        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/1113934-apples-wallpaper-1920x1200-ios.jpg"))); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(-700, 0, 1540, 690));

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
   ManageProduct MP = new ManageProduct();
        MP.setVisible(true);
        MP.pack();
        MP.setLocationRelativeTo(null);
        MP.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_AddActionPerformed

    private void ViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewActionPerformed
      String fileName = "Product.txt";
File file = new File(fileName);

try {
    BufferedReader br = new BufferedReader(new FileReader(file));

    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        // Clear existing data in the table
        model.setRowCount(0);

        String line;
        while ((line = br.readLine()) != null) {
            String[] dataRow = line.split(" ");
            model.addRow(dataRow);
        }

        br.close();
    } catch (FileNotFoundException ex) {
        JOptionPane.showMessageDialog(this, "File not found: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    } catch (IOException ex) {
        JOptionPane.showMessageDialog(this, "Error reading file: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_ViewActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
       // Get the selected row index
    int selectedRowIndex = jTable2.getSelectedRow();
    
    // Set data to text fields from the selected row
    JPID.setText(jTable2.getValueAt(selectedRowIndex, 0).toString());
    ProType.setText(jTable2.getValueAt(selectedRowIndex, 1).toString());
    JPname.setText(jTable2.getValueAt(selectedRowIndex, 2).toString());
    JPprice.setText(jTable2.getValueAt(selectedRowIndex, 3).toString());
    JNoItems.setText(jTable2.getValueAt(selectedRowIndex, 4).toString());
    
    }//GEN-LAST:event_jTable2MouseClicked

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
         DefaultTableModel tb2Model = (DefaultTableModel) jTable2.getModel();

    if (jTable2.getSelectedRowCount() == 1) {
        int selectedRow = jTable2.getSelectedRow();
        tb2Model.removeRow(selectedRow);
        
        // Delete the corresponding row from the text file
        deleteRowFromFi1e(selectedRow);
    } else {
        if (jTable2.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Table is Empty");
        } else {
            JOptionPane.showMessageDialog(this, "Please select a single Row to delete");
        }
    }
    }//GEN-LAST:event_DeleteActionPerformed
private void deleteRowFromFi1e(int rowIndex) {
    try {
        File file = new File("Product.txt");
        List<String> lines = Files.readAllLines(file.toPath());
        
        if (rowIndex >= 0 && rowIndex < lines.size()) {
            lines.remove(rowIndex);
            Files.write(file.toPath(), lines);
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
}
    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_ClearActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        // Create a new instance of the managerframe
    Manager manager = new Manager();
    
    // Close the current frame
    this.dispose();
    
    // Set the visibility of the manager frame to true
    manager.setVisible(true);
    }//GEN-LAST:event_BackActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
             
    DefaultTableModel tblModel = (DefaultTableModel) jTable2.getModel();
    TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(tblModel);
    jTable2.setRowSorter(sorter);

    // Get the text to be searched from the Search field
    String searchText = Search.getText().trim();

    if (searchText.isEmpty()) {
        // If the search text is empty, show an error message and return
        JOptionPane.showMessageDialog(this, "Please enter something to search.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    } else {
        try {
            // Use RowFilter to perform case-insensitive regex filtering
            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + searchText));
        } catch (java.util.regex.PatternSyntaxException ex) {
            // Handle regex pattern syntax errors, if any
            JOptionPane.showMessageDialog(this, "Invalid search pattern.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_SearchActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel) jTable2.getModel();
    if (jTable2.getSelectedRowCount() == 1) {
        // Get the selected row index
        int selectedRowIndex = jTable2.getSelectedRow();

        // Get the updated values from the text fields
        int ProductID = Integer.parseInt(JPID.getText());
        String ProductType = ProType.getText();
        String Productname = JPname.getText();
        String Price= JPprice.getText();
        int NoOfItems = Integer.parseInt(JNoItems.getText());

        // Set the updated values in the table
        tblModel.setValueAt(ProductID, selectedRowIndex, 0);
        tblModel.setValueAt(ProductType, selectedRowIndex, 1);
        tblModel.setValueAt(Productname, selectedRowIndex, 2);
        tblModel.setValueAt(Price, selectedRowIndex, 3);
        tblModel.setValueAt(NoOfItems, selectedRowIndex, 4);


        // Save the updated data back to the "Product.txt" file
        String fileName = "Product.txt";
        File file = new File(fileName);
        try {
            FileWriter writer = new FileWriter(file);

            for (int row = 0; row < tblModel.getRowCount(); row++) {
                for (int col = 0; col < tblModel.getColumnCount(); col++) {
                    writer.write(tblModel.getValueAt(row, col).toString() + " ");
                }
                writer.write(System.getProperty("line.separator"));
            }

            writer.close();
            JOptionPane.showMessageDialog(this, "Data updated and saved successfully.");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error saving data to file: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    } else {
        if (jTable2.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Table is Empty");
        } else {
            JOptionPane.showMessageDialog(this, "Please Select a single Row to Update");
        }
    }
    }//GEN-LAST:event_UpdateActionPerformed
 
    static void AddRowsToTable(Object[] dataRow) {
    DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
    model.addRow(dataRow);
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JToggleButton Back;
    private javax.swing.JToggleButton Clear;
    private javax.swing.JButton Delete;
    private javax.swing.JToggleButton Exit;
    private javax.swing.JTextField JNoItems;
    private javax.swing.JTextField JPID;
    private javax.swing.JTextField JPname;
    private javax.swing.JTextField JPprice;
    private javax.swing.JTextField ProType;
    private javax.swing.JTextField Search;
    private javax.swing.JButton Update;
    private javax.swing.JButton View;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private static javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
